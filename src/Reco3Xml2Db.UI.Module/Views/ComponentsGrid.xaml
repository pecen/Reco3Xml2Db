<UserControl
  x:Class="Reco3Xml2Db.UI.Module.Views.ComponentsGrid"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:commonControls="clr-namespace:Reco3Xml2Db.Utilities.Infrastructure.UI.Controls;assembly=Reco3Xml2Db.Utilities"
  xmlns:commonIcons="clr-namespace:Reco3Xml2Db.Utilities.Infrastructure.Icons;assembly=Reco3Xml2Db.Utilities"
  xmlns:converters="clr-namespace:Reco3Xml2Db.UI.Module.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:enums="clr-namespace:Reco3Xml2Db.UI.Module.Enums"
  xmlns:interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:localbehaviors="clr-namespace:Reco3Xml2Db.UI.Module.Behaviors"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:properties="clr-namespace:Reco3Xml2Db.UI.Module.Properties"
  xmlns:views="clr-namespace:Reco3Xml2Db.UI.Module.Views"
  d:DesignHeight="300"
  prism:ViewModelLocator.AutoWireViewModel="True"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <commonControls:SharedResourceDictionary SharedSource="/Reco3Xml2Db.Utilities;component/Resources/Styles/CommonStyles.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <converters:StatusIntToEnumValueConverter x:Key="StatusIntToEnumValueConverter" />
      <converters:SelectedComponentFilteringToVisibilityConverter x:Key="SelectedFilteringToVisibilityConverter" />
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid Margin="10">

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <StackPanel Orientation="Horizontal">
        <Button
          Grid.Column="0"
          Width="78"
          Margin="0,2,0,2"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          Command="{Binding DeleteComponentsCommand}"
          Content="{x:Static properties:ComponentsGrid.Delete}"
          ToolTip="{x:Static properties:ComponentsGrid.DeleteInfo}" />
        <Separator Margin="6,2,6,2" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
      </StackPanel>
      <Label
        Grid.Column="1"
        Margin="0,2,0,2"
        Content="{x:Static properties:ComponentsGrid.SearchPDNumber}" />
      <ComboBox
        x:Name="ColumnNames"
        Grid.Column="1"
        Margin="0,2,5,2"
        ItemsSource="{Binding Columns}"
        SelectedIndex="{Binding SelectedColumn}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="SelectionChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </ComboBox>
      <TextBox
        Grid.Column="2"
        Margin="0,2,0,2"
        VerticalContentAlignment="Center"
        Background="White"
        Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="TextChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </TextBox>
      <ComboBox
        Grid.Column="2"
        Margin="0,2,0,2"
        ItemsSource="{Binding PDStatusList}"
        SelectedIndex="{Binding SelectedPDStatus}"
        Visibility="{Binding SelectedColumn, Converter={StaticResource SelectedFilteringToVisibilityConverter}, ConverterParameter={x:Static enums:FilterableComponentColumns.PDStatus}}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="SelectionChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </ComboBox>
      <ComboBox
        Grid.Column="2"
        Margin="0,2,0,2"
        ItemsSource="{Binding ComponentTypeList}"
        SelectedIndex="{Binding SelectedComponentType}"
        Visibility="{Binding SelectedColumn, Converter={StaticResource SelectedFilteringToVisibilityConverter}, ConverterParameter={x:Static enums:FilterableComponentColumns.ComponentType}}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="SelectionChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </ComboBox>
      <ComboBox
        Grid.Column="2"
        Margin="0,2,0,2"
        ItemsSource="{Binding PDSourceList}"
        SelectedIndex="{Binding SelectedPDSource}"
        Visibility="{Binding SelectedColumn, Converter={StaticResource SelectedFilteringToVisibilityConverter}, ConverterParameter={x:Static enums:FilterableComponentColumns.PDSource}}">
        <behaviors:Interaction.Triggers>
          <behaviors:EventTrigger EventName="SelectionChanged">
            <behaviors:InvokeCommandAction Command="{Binding SearchCommand}" />
          </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>
      </ComboBox>
      <StackPanel
        Grid.Column="3"
        HorizontalAlignment="Right"
        Orientation="Horizontal">
        <Label HorizontalAlignment="Right" Content="Count:" />
        <Label Content="{Binding Components.Count}" />
      </StackPanel>
    </Grid>

    <DataGrid
      x:Name="componentGrid"
      Grid.Row="1"
      AutoGenerateColumns="False"
      CanUserAddRows="False"
      HorizontalScrollBarVisibility="Auto"
      ItemsSource="{Binding Components, UpdateSourceTrigger=PropertyChanged}"
      SelectedItem="{Binding SelectedItem}">
      <DataGrid.ContextMenu>
        <ContextMenu>
          <!--
            The below Path has the value CurrentItem, which is not shown in the selectable items list, because
            the PlacementTarget in this case is a DataGrid, which in turn has the item CurrentItem. This gives us
            the ComponentInfo object which has the property Xml, i.e. the selected Xml.
          -->
          <!--<MenuItem
                        Command="{Binding CopyToClipboard}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent.PlacementTarget.CurrentItem.Xml}"
                        Header="{x:Static properties:ComponentsGrid.Copy}">-->
					<MenuItem Command="{Binding Component.CopyToClipboard}" Header="{x:Static properties:ComponentsGrid.Copy}">
            <MenuItem.Icon>
              <commonControls:IconDisplayer HorizontalAlignment="Center" Icon="{x:Static commonIcons:StandardActionIcons.Copy}" />
            </MenuItem.Icon>
            <interactivity:Interaction.Behaviors>
              <localbehaviors:SetCellValueToCommandParameterBehavior />
            </interactivity:Interaction.Behaviors>
          </MenuItem>
        </ContextMenu>
      </DataGrid.ContextMenu>
      <DataGrid.Columns>
        <DataGridCheckBoxColumn Binding="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}">
          <DataGridCheckBoxColumn.HeaderTemplate>
            <DataTemplate>
              <CheckBox
                Content="{x:Static properties:ComponentsGrid.SelectAll}"
                IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:ComponentsGrid}, Path=DataContext.AllSelected}"
                ToolTip="{x:Static properties:ComponentsGrid.CheckboxInfo}" />
            </DataTemplate>
          </DataGridCheckBoxColumn.HeaderTemplate>
        </DataGridCheckBoxColumn>
        <DataGridTextColumn Binding="{Binding Component.ComponentId}" Header="{x:Static properties:ComponentsGrid.ComponentId}" />
				<DataGridTextColumn Binding="{Binding Component.PDNumber}" Header="{x:Static properties:ComponentsGrid.PDNumber}" />
				<DataGridTextColumn Binding="{Binding Component.DownloadedTimestamp}" Header="{x:Static properties:ComponentsGrid.Downloaded}" />
				<DataGridTextColumn Binding="{Binding Component.Description}" Header="{x:Static properties:ComponentsGrid.Description}" />
				<DataGridTextColumn Binding="{Binding Component.PDStatus, Converter={StaticResource StatusIntToEnumValueConverter}, ConverterParameter={x:Type enums:PDStatus}}" Header="{x:Static properties:ComponentsGrid.PDStatus}" />
				<DataGridTextColumn Binding="{Binding Component.ComponentType, Converter={StaticResource StatusIntToEnumValueConverter}, ConverterParameter={x:Type enums:ComponentType}}" Header="{x:Static properties:ComponentsGrid.Type}" />
				<DataGridTextColumn Binding="{Binding Component.PDSource, Converter={StaticResource StatusIntToEnumValueConverter}, ConverterParameter={x:Type enums:PDSource}}" Header="{x:Static properties:ComponentsGrid.PDSource}" />
				<DataGridTextColumn Binding="{Binding Component.SourceComponentId}" Header="{x:Static properties:ComponentsGrid.SourceComponentId}" />
        <DataGridTemplateColumn Width="200" Header="{x:Static properties:ComponentsGrid.Xml}">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock>
                <Hyperlink Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:ComponentsGrid}, Path=DataContext.ViewXmlCommand}" CommandParameter="{Binding Component.Xml}">
                  <TextBlock Text="{Binding Component.Xml}" />
                </Hyperlink>
              </TextBlock>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>
  </Grid>
</UserControl>
